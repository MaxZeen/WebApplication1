
@{
    ViewBag.Title = "NgTable";
}

@section headerscripts{
   <script src="~/Scripts/angular.min.js"></script>
<link href="~/Scripts/ng-table.min.css" rel="stylesheet" />
    <script src="~/Scripts/ng-table.min.js"></script>
    <script type="text/javascript">
        (function () {
            "use strict";

            var app = angular.module("myApp", ["ngTable", "ngTableDemos"]);

            app.controller("demoController", demoController);
            demoController.$inject = ["NgTableParams", "ngTableSimpleList"];

            function demoController(NgTableParams, simpleList) {
                var self = this;
                self.tableParams = new NgTableParams({}, {
                    dataset: simpleList
                });
            }
        })();
    </script>
}
<div ng-app="myApp">
    <div ng-controller="demoController as demo">
        <h2 class="page-header">Loading data - managed array</h2>
        <div class="bs-callout bs-callout-info">
            <h4>Overview</h4>
            <p>When you have the <em>entire</em> dataset available in-memory you can hand this to <code>NgTableParams</code> to manage the filtering, sorting and paging of that array</p>
        </div>
        <table ng-table="demo.tableParams" class="table table-condensed table-bordered table-striped">
            <tr ng-repeat="row in $data">
                <td data-title="'Name'" filter="{name: 'text'}" sortable="'name'">{{row.name}}</td>
                <td data-title="'Age'" filter="{age: 'number'}" sortable="'age'">{{row.age}}</td>
                <td data-title="'Money'" filter="{money: 'number'}" sortable="'money'">{{row.money}}</td>
            </tr>
        </table>
    </div>
</div>
@section scripts
{

}